AWSTemplateFormatVersion: 2010-09-09
Description: Step 3 (in Production Account)

Parameters:
  ArtifactBucketName:
    Description: Production Account S3 Bucket Name for Artifact (Created by deploy_template1.yml)
    Type: String
  CmkArn:
    Description: Production Account CMK ARN (Created by deploy_template1.yml)
    Type: String
  PipelineRoleArn:
    Description: Production Pipeline ARN (Created by deploy_template1.yml)
    Type: String
  CodeCommitRoleArn:
    Description: Repository Account CodeCommit Action Role ARN (Created by deploy_template2.yml)
    Type: String
  RepositoryName:
    Description: Repository Account CodeCommit Repository Name
    Type: String
  DevelopAccountId:
    Description: Develop Account Id
    Type: String
  DeployStackName: 
    Description: Stack Name To Deploy
    Type: String
  ProductionPipelineName: 
    Description: production pipeline name
    Type: String
  ApprovalTopicName:
    Description: Approval Topic Name
    Type: String
  ApprovalTopicAddress:
    Description: Approval Topic Email Address in Production Pipeline
    Type: String
  CustomEventBusName:
    Description: Custom Event Bus Name (Setted in deploy_template2.yml)
    Type: String

Resources:
  CFnRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Action: 'sts:AssumeRole'
          Principal:
            Service: 
              - cloudformation.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - '*'
                Resource: '*'
  Topic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref ApprovalTopicName
      Subscription: 
        - Endpoint: !Ref ApprovalTopicAddress
          Protocol: email
  Pipeline: 
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: !Ref ProductionPipelineName
      RoleArn: !Ref PipelineRoleArn
      Stages: 
        - Name: Source
          Actions:
            - Name: Source
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                RepositoryName: !Ref RepositoryName
                BranchName: prod
                PollForSourceChanges: false
              RunOrder: 1
              ActionTypeId:
                Version: 1
                Provider: CodeCommit
                Category: Source
                Owner: AWS
              RoleArn: !Ref CodeCommitRoleArn
        - Name: DeployStage
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CFnRole.Arn
                StackName: !Ref DeployStackName 
                ChangeSetName: !Sub ${DeployStackName}-changeset
                TemplateConfiguration: !Sub SourceOutput::templates/deploy_template.json
                TemplatePath: !Sub SourceOutput::templates/deploy_template.yml
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
              RunOrder: '1'
            - Name: ManualApprival
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                CustomData: in prodaction account pipeline, please approval.
                # ExternalEntityLink: set chengeset url here
                NotificationArn: !Ref Topic
              RunOrder: '2'
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${DeployStackName}-changeset
                RoleArn: !GetAtt CFnRole.Arn
                StackName: !Ref DeployStackName
              RunOrder: '3'
      ArtifactStore: 
        Type: S3 
        Location: !Ref ArtifactBucketName
        EncryptionKey:
          Id: !Ref CmkArn
          Type: KMS
  CustomEventBus:
    Type : AWS::Events::EventBus
    Properties:
      Name: !Ref CustomEventBusName
  CustomEventBusResorcePolisy:
    Type: AWS::Events::EventBusPolicy
    Properties:
      StatementId: !Sub ${CustomEventBus.Name}_allow_crossaccount_to_put_events
      EventBusName: !GetAtt CustomEventBus.Name
      Statement:
        Effect: Allow
        Action: events:PutEvents
        Resource: !Sub 'arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/${CustomEventBus.Name}'
        Principal:
            AWS: !Sub arn:aws:iam::${DevelopAccountId}:root
  ExecutePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
              - events.amazonaws.com
      Path: /
      Policies:
        - PolicyName: ExecPipeline
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codepipeline:StartPipelineExecution
                Resource: !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}'
  AmazonCloudWatchEventRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventBusName:
        !GetAtt CustomEventBus.Name
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:aws:codecommit:${AWS::Region}:${DevelopAccountId}:${RepositoryName}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - prod
      Targets:
        - Arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/events/test:*
          Id: cloudwatch-target-id
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProductionPipelineName}
          Id: pipeline-target-id
          RoleArn: !GetAtt ExecutePipelineRole.Arn